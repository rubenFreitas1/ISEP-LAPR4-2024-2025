@startuml
title Sequence Diagram

actor "CRM Collaborator" as Actor
participant "AddDronesToProposalAction" as Action <<presentation>>
participant "AddDronesToProposalUI" as UI <<presentation>>
participant "AddDronesToProposalController" as Controller <<application>>
participant "ShowProposalManagementService" as ShowProposalManagementService <<application>>
participant "DroneModelManagementService" as DroneModelManagementService <<application>>
participant "ShowProposal" as ShowProposal <<domain>>
participant "ShowProposalRepository" as ShowProposalRepository <<repository>>
participant "DroneModelRepository" as DroneModelRepository <<repository>>
database "Database" as Database

activate Actor

Actor -> Action**: Wants to configure the list of\n drone models of a show proposal

activate Action

Action -> UI** : create
Action -> UI: show()

deactivate Action
    activate UI

UI -> Controller** : create
UI -> Controller: getListShowProposals()

    activate Controller

        Controller -> ShowProposalManagementService: getListShowProposals()
        activate ShowProposalManagementService

        ShowProposalManagementService -> ShowProposalRepository: findAll()
        activate ShowProposalRepository

        ShowProposalRepository -> Database: findAll()
        activate Database

        Database --> ShowProposalRepository: List of Show Proposals
        deactivate Database
        ShowProposalRepository --> ShowProposalManagementService: List of Show Proposals
        deactivate ShowProposalRepository
        ShowProposalManagementService --> Controller: List of Show Proposals
        deactivate ShowProposalManagementService
        Controller --> UI: List of Show Proposals
    deactivate Controller

UI --> Actor: Show list of show proposals
deactivate UI

Actor -> UI: Choose show proposal


    activate UI

        UI -> Controller: getListDroneModels()
        activate Controller

            Controller -> DroneModelManagementService: listActiveDroneModels()
            activate DroneModelManagementService

            DroneModelManagementService -> DroneModelRepository: findByActive(true)
            activate DroneModelRepository

                DroneModelRepository -> Database: findByActive(true)
                activate Database

                Database --> DroneModelRepository: List of Active Drone Models
                deactivate Database
                DroneModelRepository --> DroneModelManagementService: List of Active Drone Models
            deactivate DroneModelRepository
            DroneModelManagementService --> Controller: List of Active Drone Models
            deactivate DroneModelManagementService
        Controller --> UI: List of Active Drone Models
        deactivate Controller

    loop While user wants to add drone Models

    UI --> Actor: Show list of drone models
    deactivate UI

    Actor -> UI: Choose drone model
    activate UI

    UI --> Actor: Request number of drones
    deactivate UI

    Actor -> UI: Provide number of drones
    activate UI

    UI -> Controller: addDroneModelToProposal(droneModel, quantity)
    activate Controller

        Controller -> ShowProposalManagementService: addDroneModelToProposal(droneModel, quantity)
        activate ShowProposalManagementService

        ShowProposalManagementService -> ShowProposal: updateListDroneModels(droneModel, quantity)
        activate ShowProposal

        ShowProposal --> ShowProposalManagementService
        deactivate ShowProposal
        ShowProposalManagementService --> Controller
        deactivate ShowProposalManagementService
    Controller --> UI
    deactivate Controller
    end
    UI --> Actor: Confirm if operation was successful
    deactivate UI
deactivate Actor

@enduml
