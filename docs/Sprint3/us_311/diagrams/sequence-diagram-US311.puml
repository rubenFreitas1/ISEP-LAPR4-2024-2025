@startuml
title Sequence Diagram

actor "CRM Collaborator" as Actor
participant "AddDronesToProposalAction" as Action <<presentation>>
participant "AddDronesToProposalUI" as UI <<presentation>>
participant "AddDronesToProposalController" as Controller <<application>>
participant "AddDroneModelsToProposalService" as ProposalService <<domain>>
participant "ShowProposal" as ShowProposal <<domain>>
participant "DroneListItem" as DroneListItem <<domain>>
participant "ShowProposalDTOParser" as ShowProposalDTOParser <<dto>>
participant "DroneModelDTOParser" as DroneModelDTOParser <<dto>>
participant "ShowProposalRepository" as ShowProposalRepository <<repository>>
participant "DroneModelRepository" as DroneModelRepository <<repository>>
database "Database" as Database

activate Actor

Actor -> Action**: Wants to configure the list of\n drone models of a show proposal

activate Action

Action -> UI** : create
Action -> UI: show()

deactivate Action
    activate UI

UI -> Controller** : create
UI -> Controller: getListShowProposals()

    activate Controller

        Controller -> ShowProposalRepository: findByStatusAndEmptyDroneList(ShowProposalStatus.PENDING)

        activate ShowProposalRepository

        ShowProposalRepository -> Database: findByStatusAndEmptyDroneList(ShowProposalStatus.PENDING)
        activate Database

        Database --> ShowProposalRepository: List of Show Proposals
        deactivate Database
        ShowProposalRepository --> Controller: List of Show Proposals
        deactivate ShowProposalRepository

        Controller -> ShowProposalDTOParser: transformToShowProposalDTOlist(showProposals)
        activate ShowProposalDTOParser

        ShowProposalDTOParser --> Controller: List of Show Proposals DTO
        deactivate ShowProposalDTOParser

        Controller --> UI: List of Show Proposals DTO
    deactivate Controller

UI --> Actor: Show list of show proposals DTO
deactivate UI

Actor -> UI: Choose show proposal


    activate UI

        UI -> Controller: getListDroneModels()
        activate Controller

            Controller -> DroneModelRepository: findByActive(true)
            activate DroneModelRepository




                DroneModelRepository -> Database: findByActive(true)
                activate Database

                Database --> DroneModelRepository: List of Active Drone Models
                deactivate Database
                DroneModelRepository --> Controller: List of Active Drone Models
            deactivate DroneModelRepository

            Controller -> DroneModelDTOParser: transformToDroneModelDTO(droneModelList)
            activate DroneModelDTOParser

            DroneModelDTOParser --> Controller: List of Active Drone Models DTO
            deactivate DroneModelDTOParser


        Controller --> UI: List of Active Drone Models DTO
        deactivate Controller

    loop While user wants to add drone Models

    UI --> Actor: Show list of drone models DTO
    deactivate UI

    Actor -> UI: Choose drone model
    activate UI

    UI --> Actor: Request number of drones
    deactivate UI

    Actor -> UI: Provide number of drones
    activate UI

    UI -> Controller: addDroneModelToProposal(showProposalDTO ,droneModelDTO, quantity)
    activate Controller

        Controller -> DroneModelDTOParser: getDroneModelFromDTO(droneModelDTO)
        activate DroneModelDTOParser

        DroneModelDTOParser -> DroneModelRepository: findById(droneModelDTOId)
        activate DroneModelRepository

        DroneModelRepository -> Database: findById(droneModelDTOId)
        activate Database

        Database --> DroneModelRepository: droneModel
        deactivate Database
        DroneModelRepository --> DroneModelDTOParser: droneModel
        deactivate DroneModelRepository
        DroneModelDTOParser --> Controller: droneModel
        deactivate DroneModelDTOParser

        Controller -> ShowProposalDTOParser: getShowProposalfromDTO(showProposalDTO)
        activate ShowProposalDTOParser

        ShowProposalDTOParser -> ShowProposalRepository: findById(showProposalDTOId)
        activate ShowProposalRepository

        ShowProposalRepository -> Database: findById(showProposalDTOId)
        activate Database

        Database --> ShowProposalRepository: showProposal
        deactivate Database
        ShowProposalRepository --> ShowProposalDTOParser: showProposal
        deactivate ShowProposalRepository
        ShowProposalDTOParser --> Controller: showProposal
        deactivate ShowProposalDTOParser

        Controller -> ProposalService: addDroneModelToProposal(showProposal, droneModel, quantity)
        activate ProposalService

        ProposalService -> ShowProposal: addDroneToList( droneModel, quantity)
        activate ShowProposal

        ShowProposal -> DroneListItem: new DroneListItem(droneModel, showProposal, quantity)
        activate DroneListItem

        DroneListItem --> ShowProposal
        deactivate DroneListItem

        ShowProposal --> ProposalService
        deactivate ShowProposal
        ProposalService --> Controller
        deactivate ProposalService
    Controller --> UI
    deactivate Controller
    end
    UI -> Controller: save(showProposalDTO)
    activate Controller

    Controller -> ShowProposalDTOParser: getShowProposalfromDTO(showProposalDTO)
            activate ShowProposalDTOParser

            ShowProposalDTOParser -> ShowProposalRepository: findById(showProposalDTOId)
            activate ShowProposalRepository

            ShowProposalRepository -> Database: findById(showProposalDTOId)
            activate Database

            Database --> ShowProposalRepository: showProposal
            deactivate Database
            ShowProposalRepository --> ShowProposalDTOParser: showProposal
            deactivate ShowProposalRepository
            ShowProposalDTOParser --> Controller: showProposal
            deactivate ShowProposalDTOParser

    Controller -> ShowProposalRepository: save(showProposal)
    activate ShowProposalRepository

    ShowProposalRepository -> Database: save(showProposal)
    activate Database

    Database --> ShowProposalRepository
    deactivate Database
    ShowProposalRepository --> Controller
    deactivate ShowProposalRepository
    Controller --> UI
    deactivate Controller
    UI --> Actor: Confirm if operation was successful
    deactivate UI
deactivate Actor

@enduml
