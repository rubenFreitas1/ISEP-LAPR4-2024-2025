@startuml
title Sequence Diagram

actor "CRM Collaborator" as Actor
participant "RegisterCustomerUI" as UI <<presentation>>
participant "RegisterCustomerController" as Controller <<application>>
participant "AuthorizationService" as AuthorizationService <<auth>>
participant "CustomerManagementService" as CustomerManagementService <<application>>
participant "RepresentativeManagementService" as RepresentativeManagementService <<application>>
participant "Customer" as Customer <<domain>>
participant "Representative" as Representative <<domain>>
participant "CustomerRepository" as CustomerRepository <<repository>>
participant "RepresentativeRepository" as RepresentativeRepository <<repository>>
database "Database" as Database

activate Actor

Actor -> UI: show()
    activate UI

UI -> Controller** : create()

UI --> Actor: Request Customer Information (Name, Email,Password, Phone Number,\n VatNumber, Address, representativeName, representativeEmail, representativePassword,\n representativePhoneNumber, representativePosition)
deactivate UI

Actor -> UI: Insert Customer data


    activate UI

        UI -> Controller : registerCustomer(Name, Email,Password, Phone Number,\n VatNumber, Address, representativeName, representativeEmail, representativePassword,\n representativePhoneNumber, representativePosition)
            activate Controller

                Controller -> AuthorizationService** : ensureAuthenticatedUserHasAnyOf()

                deactivate AuthorizationService

                Controller -> CustomerManagementService : registerNewCustomer(Name, Email,Password, Phone Number,\n VatNumber, Address)
                activate CustomerManagementService


                    CustomerManagementService -> Customer : create()
                    activate Customer


                    Customer -> CustomerManagementService : newCustomer

                    deactivate Customer


                    CustomerManagementService -> CustomerRepository : save(newCustomer)

                    activate CustomerRepository

                             CustomerRepository -> Database : save()
                             activate Database

                                Database --> CustomerRepository
                             deactivate Database

                             CustomerRepository --> CustomerManagementService
                    deactivate CustomerRepository

                    CustomerManagementService --> Controller
                deactivate CustomerManagementService

                Controller -> RepresentativeManagementService : registerNewRepresentative(representativeName, representativeEmail,\n createdOn, representativePassword, representativePhoneNumber,\n associatedCustomer, representativePosition)
                activate RepresentativeManagementService

                RepresentativeManagementService ->Representative:create()
                activate Representative
                Representative -> RepresentativeManagementService : newRepresentative
                deactivate Representative

                RepresentativeManagementService -> RepresentativeRepository :save(newRepresentative)
                activate RepresentativeRepository
                RepresentativeRepository ->Database :save()
                activate Database
                Database --> RepresentativeRepository
                deactivate Database
                RepresentativeRepository -->RepresentativeManagementService
                deactivate RepresentativeRepository
                RepresentativeManagementService --> Controller
                deactivate RepresentativeManagementService


                Controller --> UI
            deactivate Controller
        UI --> Actor : Inform operation success
        deactivate UI
deactivate Actor

@enduml
