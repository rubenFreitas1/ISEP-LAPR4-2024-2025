@startuml
title Sequence Diagram

actor "Show Designer" as Actor
participant "AddFigureAction" as Action <<presentation>>
participant "AddFigureUI" as UI <<presentation>>
participant "AddFigureController" as Controller <<application>>
participant "AuthorizationService" as AuthorizationService <<auth>>
participant "FigureManagementService" as FigureManagementService <<application>>
participant "FigureCategoryManagementService" as FigureCategoryManagementService <<application>>
participant "Figure" as Figure <<domain>>
participant "FigureRepository" as FigureRepository <<repository>>
participant "FigureCategoryRepository" as FigureCategoryRepository <<repository>>
database "Database" as Database

activate Actor

Actor -> Action: Add figure to the catalogue
    activate Action

        Action -> UI**: create
        Action -> UI: show()

    deactivate Action

    activate UI

UI -> Controller** : create

UI -> Controller: listFigureCategories()
    activate Controller

        Controller -> FigureCategoryManagementService: findByActive(true)
            activate FigureCategoryManagementService

                FigureCategoryManagementService -> FigureCategoryRepository: findByActive(true)
                    activate FigureCategoryRepository

                        FigureCategoryRepository -> Database: findByActive(true)
                            activate Database

                                Database --> FigureCategoryRepository: List of Active Figure Categories
                            deactivate Database

                        FigureCategoryRepository --> FigureCategoryManagementService: List of Active Figure Categories
                    deactivate FigureCategoryRepository

                FigureCategoryManagementService --> Controller: List of Active Figure Categories
            deactivate FigureCategoryManagementService
        Controller --> UI: List of Active Figure Categories
    deactivate Controller


UI --> Actor: Show List of Figure Categories
deactivate UI
Actor -> UI: Select Figure Category
activate UI

UI --> Actor: Request Keywords, Description, Exclusivity
deactivate UI

Actor -> UI: Provide Figure Information

    activate UI

        UI -> Controller : addFigure(description, keywords, figureCategory, exclusive, customer)
            activate Controller

                Controller -> AuthorizationService : ensureAuthenticatedUserHasAnyOf(Roles.SHOW_DESIGNER)

                deactivate AuthorizationService

                Controller -> FigureManagementService : registerNewFigure(figureDescription, keywords, figureCategory, exclusive, customer);
                activate FigureManagementService

                    FigureManagementService -> Figure: new Figure(description, keywords, figureCategory, exclusive, customer)
                        activate Figure

                            Figure --> FigureManagementService: new Figure
                        deactivate Figure



                    FigureManagementService -> FigureRepository : save(newFigure)

                    activate FigureRepository

                             FigureRepository -> Database : save()
                             activate Database

                                Database --> FigureRepository
                             deactivate Database

                             FigureRepository --> FigureManagementService
                    deactivate FigureRepository

                    FigureManagementService --> Controller
                deactivate FigureManagementService

                Controller --> UI
            deactivate Controller
        UI --> Actor : Confirm Figure Added
        deactivate UI
deactivate Actor

@enduml
