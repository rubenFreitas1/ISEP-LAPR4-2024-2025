@startuml
title Sequence Diagram

actor "Drone Tech" as Actor
participant "AddDroneModelAction" as Action <<presentation>>
participant "AddDroneModelUI" as UI <<presentation>>
participant "AddDroneModelController" as Controller <<application>>
participant "AuthorizationService" as AuthorizationService <<auth>>
participant "DroneModelManagementService" as DroneModelManagementService <<application>>
participant "DroneModelBuilder" as DroneModelBuilder <<domain>>
participant "DroneModel" as DroneModel <<domain>>
participant "DroneModelRepository" as DroneModelRepository <<repository>>
database "Database" as Database

activate Actor

Actor -> Action**: Create a drone model

activate Action

Action -> UI** : create
Action -> UI: show()

deactivate Action
    activate UI

UI -> Controller** : create

UI --> Actor: Request Drone Model Information (Model Name, Manufacturer)
deactivate UI

Actor -> UI: Provide Drone Model Information


    activate UI

        UI -> Controller : addDroneModel(modelName, manufacturer, programmingLanguage)
            activate Controller

                Controller -> AuthorizationService** : ensureAuthenticatedUserHasAnyOf(Roles.DRONE_TECH)

                deactivate AuthorizationService

                Controller -> DroneModelManagementService : registerNewDroneModel(modelName, manufacturer,programmingLanguage, createdOn, createdBy);
                activate DroneModelManagementService

                    DroneModelManagementService -> DroneModelBuilder** : create
                    DroneModelManagementService -> DroneModelBuilder : build()
                    activate DroneModelBuilder

                        DroneModelBuilder -> DroneModel**: new DroneModel(modelName, manufacturer, programmingLanguage, createdOn, createdBy);

                         activate DroneModel

                         DroneModel --> DroneModelBuilder : newDroneModel
                         deactivate DroneModel

                          DroneModelBuilder --> DroneModelManagementService : newDroneModel

                    deactivate DroneModelBuilder


                    DroneModelManagementService -> DroneModelRepository : save(newDroneModel)

                    activate DroneModelRepository

                             DroneModelRepository -> Database : save()
                             activate Database

                                Database --> DroneModelRepository
                             deactivate Database

                             DroneModelRepository --> DroneModelManagementService
                    deactivate DroneModelRepository

                    DroneModelManagementService --> Controller
                deactivate DroneModelManagementService

                Controller --> UI
            deactivate Controller
        UI --> Actor : Confirm Drone Model Added
        deactivate UI
deactivate Actor

@enduml
